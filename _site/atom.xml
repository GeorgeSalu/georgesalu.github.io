<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programmer | Code</title>
    <description>Este é mais um blog dedicado ao desenvolvimento web, ao DevOps, ao GNU/Linux e ao Software Livre</description>
    <link></link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
    <author>
      <name>Programmer | Code</name>
      <email>george.salu10@gmail.com</email>
      <uri>https://georgesalu.github.io</uri>
    </author>
    
      <item>
        <title>Docker primeiros passos</title>
        <description>&lt;p&gt;O que é docker ?,docker é uma plataforma para criação, execução e deploy de containers, ele é um projeto open source escrito em go e hospedado no github.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/docker-iniciando/docker_00.png&quot; alt=&quot;docker&quot; /&gt;&lt;/p&gt;

&lt;p&gt;no github podemos encontrar muitas informações sobre o projeto como por exemplo o que será implementado no futuro no software, changelog de versões e muitas outras informações, abaixo podemos ver o changelog da versao 19.03.5 (2019-11-13) última de 2019&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/docker-iniciando/docker_11.png&quot; alt=&quot;docker&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Existem varias formas de fazer a instalação do docker irei mostrar a vc’s como fazer a instalação via um script shell que automatiza esta tarefa para varias distribuições linux, ele esta disponibilizado de forma open source no github neste endereço &lt;a href=&quot;https://github.com/docker/docker-install&quot;&gt;docker script instalação&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/docker-iniciando/docker_01.png&quot; alt=&quot;docker&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Agora tudo que precisamos e um terminal linux para fazer a instalação&lt;/p&gt;

&lt;p&gt;Abaixo o comando ira baixar o script pra sua maquina, eu estou baixando na minha area de trabalho mas vc pode colocar em qualquer lugar
&lt;img src=&quot;assets/docker-iniciando/docker_02.png&quot; alt=&quot;docker&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Agora vamos executando o script 
&lt;img src=&quot;assets/docker-iniciando/docker_03.png&quot; alt=&quot;docker&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dependendo da sua internet a instalação pode demorar um pouco
&lt;img src=&quot;assets/docker-iniciando/docker_04.png&quot; alt=&quot;docker&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Após o download e instalação do docker teremos a seguinte saida&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/docker-iniciando/docker_05.png&quot; alt=&quot;docker&quot; /&gt;&lt;/p&gt;

&lt;p&gt;E pronto já temos o docker instalado e rodando em nossa maquina, para facilitar nossa vida vamos incluir nosso usuario no grupo do docker (isso é necessário para conseguir usar o comando docker sem sudo) se vc observou bem o comando necessário para isso está no final da imagem acima&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/docker-iniciando/docker_06.png&quot; alt=&quot;docker&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos ver se docker está realmente instalado com seguinte comando&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/docker-iniciando/docker_07.png&quot; alt=&quot;docker&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Se digitarmos somente o comando docker no terminal poderemos ver um help com todos as suas opções e subcomandos&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/docker-iniciando/docker_08.png&quot; alt=&quot;docker&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Um outro comando interessante é o docker info que retorna informações gerais sobre o docker instalado&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/docker-iniciando/docker_09.png&quot; alt=&quot;docker&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Agora que ja passamos pela instalação e ja confirmamos que o docker esta rodando vamos faze o famoso “helloWorld” com docker&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/docker-iniciando/docker_10.png&quot; alt=&quot;docker&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;comandos-basicos&quot;&gt;&lt;a href=&quot;#header-4&quot;&gt;&lt;/a&gt;Comandos Basicos&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;docker version - verifica a versão do Docker.&lt;/li&gt;
  &lt;li&gt;docker image inspect - traz detalhes de determinada imagem.&lt;/li&gt;
  &lt;li&gt;docker image ls - lista as imagens presente no host.&lt;/li&gt;
  &lt;li&gt;docker image rm - remove uma imagem.&lt;/li&gt;
  &lt;li&gt;docker images - conecta no container.&lt;/li&gt;
  &lt;li&gt;docker container run - executa um container.&lt;/li&gt;
  &lt;li&gt;docker container ls - lista os container em execução.&lt;/li&gt;
  &lt;li&gt;docker container inspect - traz detalhes de determinado container.&lt;/li&gt;
  &lt;li&gt;docker container ls -a - lista todos os containers, inclusive os parados.&lt;/li&gt;
  &lt;li&gt;docker container stop - para um container.&lt;/li&gt;
  &lt;li&gt;docker container start - inicia um container.&lt;/li&gt;
  &lt;li&gt;docker container restart - restart de um container.&lt;/li&gt;
  &lt;li&gt;docker container rm - remove um container.&lt;/li&gt;
  &lt;li&gt;docker container rm -f - remove um container em execução.&lt;/li&gt;
  &lt;li&gt;docker container top - traz os processos em execução.&lt;/li&gt;
  &lt;li&gt;docker container stats - traz informações sobre o consumo de recursos do container.&lt;/li&gt;
  &lt;li&gt;docker container exec - executa algo no container.&lt;/li&gt;
  &lt;li&gt;docker container attach - conecta no container.&lt;/li&gt;
  &lt;li&gt;docker ps - exibe todos os containers em execução.&lt;/li&gt;
  &lt;li&gt;docker ps -a - exibe todos os containers criados.&lt;/li&gt;
  &lt;li&gt;docker run -it NOME_IMAGEM - conecta o terminal que estamos utilizando com o do container.&lt;/li&gt;
  &lt;li&gt;docker start ID_CONTAINER - inicia o container com id informado.&lt;/li&gt;
  &lt;li&gt;docker stop ID_CONTAINER - interrompe o container com id em questão.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 16 Jan 2020 00:00:00 -0300</pubDate>
        <link>//Docker-primeiros-passos</link>
        <link href="/Docker-primeiros-passos"/>
        <guid isPermaLink="true">/Docker-primeiros-passos</guid>
      </item>
    
  </channel>
</rss>
